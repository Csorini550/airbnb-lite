{"version":3,"sources":["../../source/libphonenumber/isPossiblePhoneNumberDefaultMetadata.test.js"],"names":["isPossiblePhoneNumber","describe","it","should","equal"],"mappings":"AAAA,OAAOA,qBAAP,MAAkC,wCAAlC;AAEAC,QAAQ,CAAC,sCAAD,EAAyC,YAAM;AACtDC,EAAAA,EAAE,CAAC,2CAAD,EAA8C,YAAM;AACrDF,IAAAA,qBAAqB,CAAC,IAAD,CAArB,CAA4BG,MAA5B,CAAmCC,KAAnC,CAAyC,KAAzC;AACAJ,IAAAA,qBAAqB,CAAC,cAAD,CAArB,CAAsCG,MAAtC,CAA6CC,KAA7C,CAAmD,IAAnD;AACAJ,IAAAA,qBAAqB,CAAC,cAAD,CAArB,CAAsCG,MAAtC,CAA6CC,KAA7C,CAAmD,IAAnD;AACA,GAJC,CAAF;AAKA,CANO,CAAR","sourcesContent":["import isPossiblePhoneNumber from './isPossiblePhoneNumberDefaultMetadata'\r\n\r\ndescribe('isPossiblePhoneNumberDefaultMetadata', () => {\r\n\tit('should tell if phone numbers are possible', () => {\r\n\t\tisPossiblePhoneNumber('+1').should.equal(false)\r\n\t\tisPossiblePhoneNumber('+12133734253').should.equal(true)\r\n\t\tisPossiblePhoneNumber('+19999999999').should.equal(true)\r\n\t})\r\n})"],"file":"isPossiblePhoneNumberDefaultMetadata.test.js"}