{"version":3,"sources":["../../source/react-hook-form/ReactHookFormInput.js"],"names":["ReactHookFormInput","ref","Component","name","defaultValue","control","rules","onChange_","onChange","onBlur_","onBlur","className","rest","internalRef","setRef","instance","current","onFocus","focus","undefined","value","onChangeCombined","onBlurCombined","event","React","forwardRef","propTypes","PropTypes","elementType","isRequired","string","object","func"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;;;;;;;;;;;;;AAEA,IAAIA,kBAAkB,GAAG,kCAUtBC,GAVsB,EAUd;AAAA,MATTC,SASS,QATTA,SASS;AAAA,MARTC,IAQS,QARTA,IAQS;AAAA,MAPTC,YAOS,QAPTA,YAOS;AAAA,MANTC,OAMS,QANTA,OAMS;AAAA,MALTC,KAKS,QALTA,KAKS;AAAA,MAJCC,SAID,QAJTC,QAIS;AAAA,MAHDC,OAGC,QAHTC,MAGS;AAAA,MAFTC,SAES,QAFTA,SAES;AAAA,MADNC,IACM;;AACT,MAAMC,WAAW,GAAG,oBAApB;AACA,MAAMC,MAAM,GAAG,wBAAY,UAACC,QAAD,EAAc;AACvCF,IAAAA,WAAW,CAACG,OAAZ,GAAsBD,QAAtB;;AACA,QAAId,GAAJ,EAAS;AACPA,MAAAA,GAAG,CAACe,OAAJ,GAAcD,QAAd;AACD;AACF,GALc,EAKZ,EALY,CAAf;AAMA,MAAME,OAAO,GAAG,wBAAY,YAAM;AAChC;AACAJ,IAAAA,WAAW,CAACG,OAAZ,CAAoBE,KAApB;AACD,GAHe,EAGb,EAHa,CAAhB,CARS,CAYT;AACA;;AACAd,EAAAA,YAAY,GAAGA,YAAY,KAAKe,SAAjB,GAA6B,IAA7B,GAAoCf,YAAnD;AACA,SACE,gCAAC,yBAAD;AACE,IAAA,OAAO,EAAEC,OADX;AAEE,IAAA,IAAI,EAAEF,IAFR;AAGE,IAAA,YAAY,EAAEC,YAHhB;AAIE,IAAA,KAAK,EAAEE,KAJT;AAKE,IAAA,OAAO,EAAEW,OALX;AAME,IAAA,MAAM,EAAE,uBAAiC;AAAA,UAA9BG,KAA8B,SAA9BA,KAA8B;AAAA,UAAvBZ,QAAuB,SAAvBA,QAAuB;AAAA,UAAbE,MAAa,SAAbA,MAAa;AACvC,UAAMW,gBAAgB,GAAG,wBAAY,UAACD,KAAD,EAAW;AAC9CZ,QAAAA,QAAQ,CAACY,KAAD,CAAR;;AACA,YAAIb,SAAJ,EAAe;AACbA,UAAAA,SAAS,CAACa,KAAD,CAAT;AACD;AACF,OALwB,EAKtB,EALsB,CAAzB;AAMA,UAAME,cAAc,GAAG,wBAAY,UAACC,KAAD,EAAW;AAC5Cb,QAAAA,MAAM,CAACa,KAAD,CAAN;;AACA,YAAId,OAAJ,EAAa;AACXA,UAAAA,OAAO,CAACc,KAAD,CAAP;AACD;AACF,OALsB,EAKpB,EALoB,CAAvB;AAMA,aACE,gCAAC,SAAD;AACE,QAAA,GAAG,EAAET;AADP,SAEMF,IAFN;AAGE,QAAA,KAAK,EAAEQ,KAHT;AAIE,QAAA,QAAQ,EAAEC,gBAJZ;AAKE,QAAA,MAAM,EAAEC;AALV,SADF;AAQD;AA3BH,IADF;AA8BD,CAvDD;;AAyDAtB,kBAAkB,GAAGwB,kBAAMC,UAAN,CAAiBzB,kBAAjB,CAArB;AAEAA,kBAAkB,CAAC0B,SAAnB,GAA+B;AAC7BxB,EAAAA,SAAS,EAAEyB,sBAAUC,WAAV,CAAsBC,UADJ;AAE7B1B,EAAAA,IAAI,EAAEwB,sBAAUG,MAAV,CAAiBD,UAFM;AAG7BzB,EAAAA,YAAY,EAAEuB,sBAAUG,MAHK;AAI7BzB,EAAAA,OAAO,EAAEsB,sBAAUI,MAAV,CAAiBF,UAJG;AAK7BvB,EAAAA,KAAK,EAAEqB,sBAAUI,MAAV,CAAiBF,UALK;AAM7BrB,EAAAA,QAAQ,EAAEmB,sBAAUK,IANS;AAO7BtB,EAAAA,MAAM,EAAEiB,sBAAUK,IAPW;AAQ7BrB,EAAAA,SAAS,EAAEgB,sBAAUG;AARQ,CAA/B;eAWe9B,kB","sourcesContent":["import React, { useRef, useCallback } from 'react'\r\nimport { Controller } from 'react-hook-form'\r\nimport PropTypes from 'prop-types'\r\n\r\nlet ReactHookFormInput = ({\r\n  Component,\r\n  name,\r\n  defaultValue,\r\n  control,\r\n  rules,\r\n  onChange: onChange_,\r\n  onBlur: onBlur_,\r\n  className,\r\n  ...rest\r\n}, ref) => {\r\n  const internalRef = useRef()\r\n  const setRef = useCallback((instance) => {\r\n    internalRef.current = instance\r\n    if (ref) {\r\n      ref.current = instance\r\n    }\r\n  }, [])\r\n  const onFocus = useCallback(() => {\r\n    // internalRef.current.disabled = false\r\n    internalRef.current.focus()\r\n  }, [])\r\n  // `feact-hook-form` doesn't know how to properly handle `undefined` values.\r\n  // https://github.com/react-hook-form/react-hook-form/issues/2990\r\n  defaultValue = defaultValue === undefined ? null : defaultValue\r\n  return (\r\n    <Controller\r\n      control={control}\r\n      name={name}\r\n      defaultValue={defaultValue}\r\n      rules={rules}\r\n      onFocus={onFocus}\r\n      render={({ value, onChange, onBlur }) => {\r\n        const onChangeCombined = useCallback((value) => {\r\n          onChange(value)\r\n          if (onChange_) {\r\n            onChange_(value)\r\n          }\r\n        }, [])\r\n        const onBlurCombined = useCallback((event) => {\r\n          onBlur(event)\r\n          if (onBlur_) {\r\n            onBlur_(event)\r\n          }\r\n        }, [])\r\n        return (\r\n          <Component\r\n            ref={setRef}\r\n            {...rest}\r\n            value={value}\r\n            onChange={onChangeCombined}\r\n            onBlur={onBlurCombined}/>\r\n        )\r\n      }}/>\r\n  )\r\n}\r\n\r\nReactHookFormInput = React.forwardRef(ReactHookFormInput)\r\n\r\nReactHookFormInput.propTypes = {\r\n  Component: PropTypes.elementType.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  defaultValue: PropTypes.string,\r\n  control: PropTypes.object.isRequired,\r\n  rules: PropTypes.object.isRequired,\r\n  onChange: PropTypes.func,\r\n  onBlur: PropTypes.func,\r\n  className: PropTypes.string\r\n}\r\n\r\nexport default ReactHookFormInput\r\n"],"file":"ReactHookFormInput.js"}